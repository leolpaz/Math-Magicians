{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculate.js","App.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","props","onClickHandler","event","a","setState","obj","state","buttonName","target","name","total","next","match","includes","parseFloat","screen","this","className","onClick","type","React","Component","App","PureComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.469ebe3b.chunk.js","sourcesContent":["import Big from 'big.js';\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne);\r\n  const two = Big(numberTwo);\r\n  if (operation === '+') {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === '-') {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === 'x') {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === 'รท') {\r\n    try {\r\n      return one.div(two).toString();\r\n    } catch (err) {\r\n      return \"Can't divide by 0.\";\r\n    }\r\n  }\r\n  if (operation === '%') {\r\n    return one.mod(two).toString();\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}","import React from 'react';\r\nimport calculate from '../logic/calculate';\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      total: null,\r\n      next: null,\r\n      operation: null\r\n    }\r\n  }\r\n\r\n  onClickHandler = async (event) => {\r\n    this.setState(calculate(this.state, event.target.name))\r\n  };\r\n\r\n  render() {\r\n    let screen;\r\n    if(this.state.next === null && this.state.total === null) {\r\n     screen = <div className=\"screen\">0</div>\r\n    } else if(this.state.next === null) {\r\n     screen = <div className=\"screen\">{this.state.total}</div>\r\n    } else {\r\n     screen = <div className=\"screen\">{this.state.next}</div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"calc-container\">\r\n        {screen}\r\n        <div className=\"btns-container\">\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"AC\" className=\"top-btn\">AC</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"+/-\" className=\"top-btn\">+/-</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"%\" className=\"top-btn\">%</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"รท\" className=\"side-btn\">รท</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"7\" className=\"num-btn\">7</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"8\" className=\"num-btn\">8</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"9\" className=\"num-btn\">9</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"x\" className=\"side-btn\">x</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"4\" className=\"num-btn\">4</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"5\" className=\"num-btn\">5</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"6\" className=\"num-btn\">6</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"-\" className=\"side-btn\">-</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"1\" className=\"num-btn\">1</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"2\" className=\"num-btn\">2</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"3\" className=\"num-btn\">3</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"+\" className=\"side-btn\">+</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"0\" className=\"zero-btn\">0</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\".\" className=\"num-btn\">.</button>\r\n          <button onClick={this.onClickHandler} type=\"button\" name=\"=\" className=\"side-btn\">=</button>\r\n        </div>\r\n        <div>total is {this.state.total}</div>\r\n        <div>next is {this.state.next}</div>\r\n        <div>operate is {this.state.operation}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import operate from './operate';\r\n\r\nfunction isNumber(item) {\r\n  return !!item.match(/[0-9]+/);\r\n}\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:s      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === 'AC') {\r\n    return {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === '0' && obj.next === '0') {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { ...obj, next: obj.next + buttonName };\r\n      }\r\n      return { ...obj, next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      return {\r\n        next: obj.next + buttonName,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === '.') {\r\n    if (obj.next) {\r\n      if (obj.next.includes('.')) {\r\n        return { ...obj };\r\n      }\r\n      return { ...obj, next: `${obj.next}.` };\r\n    }\r\n    if (obj.operation) {\r\n      return { next: '0.' };\r\n    }\r\n    if (obj.total) {\r\n      if (obj.total.includes('.')) {\r\n        return {};\r\n      }\r\n      return { total: `${obj.total}.` };\r\n    }\r\n    return { total: '0.' };\r\n  }\r\n\r\n  if (buttonName === '=') {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    // '=' with no operation, nothing to do\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === '+/-') {\r\n    if (obj.next) {\r\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  if (!obj.next && !obj.total) {\r\n    return {};\r\n  }\r\n\r\n  // User pressed an operation after pressing '='\r\n  if (!obj.next && obj.total && !obj.operation) {\r\n    return { ...obj, operation: buttonName };\r\n  }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    if (obj.total && !obj.next) {\r\n      return { ...obj, operation: buttonName };\r\n    }\r\n\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\n// import components\r\nimport Calculator from './components/Calculator';\r\n\r\nclass App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <Calculator />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}